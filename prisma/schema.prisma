generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // Add this for better performance with Prisma
}

enum BudgetRange {
  LOW
  MEDIUM
  HIGH
}

model Trip {
  id          String      @id @default(cuid())
  title       String
  startDate   DateTime
  endDate     DateTime
  status      String      @default("planning")
  userId      String
  budget      BudgetRange @default(MEDIUM)
  preferences String[]    @default([])
  aiPlan      String?     // Add this field to store the JSON plan
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  destinations TripDestination[]
  activities   Activity[]
  accommodations Accommodation[]
}

model TripDestination {
  id          String   @id @default(cuid())
  tripId      String
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  name        String
  startDate   DateTime
  endDate     DateTime
  order       Int
  activities  Activity[]
  accommodation Accommodation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([tripId])
}

model Activity {
  id          String   @id @default(cuid())
  tripId      String
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  destinationId String
  destination TripDestination @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  name        String
  description String
  date        DateTime
  startTime   String?
  endTime     String?
  cost        Float
  type        String
  location    String?
  notes       String?
  
  @@index([tripId])
  @@index([destinationId])
}

model Accommodation {
  id          String   @id @default(cuid())
  tripId      String
  trip        Trip     @relation(fields: [tripId], references: [id], onDelete: Cascade)
  destinationId String
  destination TripDestination @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  name        String
  address     String
  checkIn     DateTime
  checkOut    DateTime
  cost        Float
  bookingUrl  String?
  notes       String?

  @@index([tripId])
  @@index([destinationId])
}
